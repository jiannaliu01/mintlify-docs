{
  "openapi": "3.1.0",
  "info": {
    "title": "Document Processing API",
    "description": "API for processing PDF/image files into structured Markdown and optionally extracting structured data using schemas.",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://api.trycardinal.ai"
    }
  ],
  "paths": {
    "/markdown": {
      "post": {
        "summary": "Markdown File",
        "description": "Get clean, readable text output that preserves layout.",
        "operationId": "processFile",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF or image file to upload (required if no fileUrl)."
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the file to process (required if no file)."
                  },
                  "imageMetadataDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes image metadata in each page of the response."
                  },
                  "barcodeDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes barcode detection results in each page of the response."
                  },
                  "densePdfDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes dense tables in each page of the response."
                  },
                  "signatureDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes signature detection results in each page of the response."
                  },
                  "startPage": {
                    "type": "integer",
                    "default": 1,
                    "description": "Page number to start processing from."
                  },
                  "ephemeral": {
                    "type": "boolean",
                    "default": false,
                    "description": "We return cropped images by default as presigned URLs. If true, these images are not stored and the URL field will contain a base64 string."
                  },
                  "markdown": {
                    "type": "boolean",
                    "default": false,
                    "description": "Controls table handling in output. By default, tables remain HTML to preserve structure. If true, tables are converted to Markdown via markdownify (may reduce fidelity)."
                  }
                },
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful document processing response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "successful_pages": {
                      "type": "integer"
                    },
                    "failed_pages": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Extracted Markdown content for this page."
                          },
                          "height": {
                            "type": "number"
                          },
                          "width": {
                            "type": "number"
                          },
                          "barcodes": {
                            "type": "array",
                            "description": "Barcode detections for this page (present if barcodeDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          },
                          "signatures": {
                            "type": "array",
                            "description": "Signature detections for this page (present if signatureDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          },
                          "processed_tables": {
                            "type": "array",
                            "description": "Processed/detected tables for this page (present if densePdfDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          },
                          "image_metadata": {
                            "type": "array",
                            "description": "Image metadata entries for this page (present if imageMetadataDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          }
                        },
                        "required": [
                          "content",
                          "height",
                          "width"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "start_page": {
                          "type": "integer"
                        },
                        "end_page": {
                          "type": "integer"
                        },
                        "page_limit": {
                          "type": "integer"
                        },
                        "has_more_pages": {
                          "type": "boolean"
                        },
                        "next_start_page": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "current_batch": {
                          "type": "string"
                        },
                        "remaining_pages": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "required": [
                    "success",
                    "pages"
                  ]
                },
                "example": {
                  "success": true,
                  "total_pages": 2,
                  "successful_pages": 2,
                  "failed_pages": 0,
                  "pages": [
                    {
                      "content": "ACME CORPORATION\nInvoice #INV-2024-001\n...",
                      "height": 792.0,
                      "width": 612.0,
                      "barcodes": [
                        {
                          "type": "QR",
                          "value": "INV-2024-001",
                          "bounding_box": {
                            "x": 510,
                            "y": 80,
                            "w": 72,
                            "h": 72
                          }
                        }
                      ],
                      "signatures": [
                        {
                          "label": "Authorized Signature",
                          "confidence": 0.98,
                          "bounding_box": {
                            "x": 180,
                            "y": 650,
                            "w": 240,
                            "h": 80
                          }
                        }
                      ],
                      "processed_tables": [
                        {
                          "id": "tbl_1",
                          "format": "html",
                          "html": "<table>...</table>"
                        }
                      ],
                      "image_metadata": [
                        {
                          "kind": "photo",
                          "dpi": 300,
                          "mode": "gray",
                          "bounding_box": {
                            "x": 40,
                            "y": 120,
                            "w": 300,
                            "h": 180
                          }
                        }
                      ]
                    },
                    {
                      "content": "Payment Terms\nNet 30...",
                      "height": 792.0,
                      "width": 612.0,
                      "barcodes": [],
                      "signatures": [],
                      "processed_tables": [],
                      "image_metadata": []
                    }
                  ],
                  "pagination": {
                    "start_page": 1,
                    "end_page": 2,
                    "page_limit": 100,
                    "has_more_pages": false,
                    "next_start_page": null,
                    "total_pages": 2,
                    "current_batch": "1-2",
                    "remaining_pages": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid input or missing parameters)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key)"
          }
        }
      }
    },
    "/rag": {
      "post": {
        "summary": "RAG File",
        "description": "Chunk intelligently for retrieval and embedding workflows.",
        "operationId": "processFile",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF or image file to upload (required if no fileUrl)."
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the file to process (required if no file)."
                  },
                  "imageMetadataDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes image metadata in each page of the response."
                  },
                  "barcodeDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes barcode detections in each page of the response."
                  },
                  "densePdfDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes processed dense tables in each page of the response."
                  },
                  "signatureDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes signature detections in each page of the response."
                  },
                  "startPage": {
                    "type": "integer",
                    "default": 1,
                    "description": "Page number to start processing from."
                  },
                  "ephemeral": {
                    "type": "boolean",
                    "default": false,
                    "description": "We return cropped images by default as presigned URLs. If true, these images are not stored and the URL field will contain a base64 string."
                  },
                  "markdown": {
                    "type": "boolean",
                    "default": false,
                    "description": "Controls table handling in content fields. By default, tables remain HTML to preserve structure. If true, tables are converted to Markdown via markdownify (may reduce fidelity)."
                  }
                },
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful document processing response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "successful_pages": {
                      "type": "integer"
                    },
                    "failed_pages": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Extracted Markdown/text content for this page (RAG-ready)."
                          },
                          "height": {
                            "type": "number",
                            "description": "Page height in points."
                          },
                          "width": {
                            "type": "number",
                            "description": "Page width in points."
                          },
                          "bounding_boxes": {
                            "type": "array",
                            "description": "Per-span bounding boxes and their extracted content.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "bounding_box": {
                                  "type": "object",
                                  "properties": {
                                    "min_x": {
                                      "type": "number"
                                    },
                                    "min_y": {
                                      "type": "number"
                                    },
                                    "max_x": {
                                      "type": "number"
                                    },
                                    "max_y": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "min_x",
                                    "min_y",
                                    "max_x",
                                    "max_y"
                                  ],
                                  "description": "Bounding box for the span. Coordinate system matches page units."
                                },
                                "content": {
                                  "type": "string",
                                  "description": "Raw text content inside the bounding box."
                                }
                              },
                              "required": [
                                "bounding_box",
                                "content"
                              ]
                            }
                          },
                          "barcodes": {
                            "type": "array",
                            "description": "Barcode detections for this page (present if barcodeDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          },
                          "signatures": {
                            "type": "array",
                            "description": "Signature detections for this page (present if signatureDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          },
                          "processed_tables": {
                            "type": "array",
                            "description": "Processed/detected tables for this page (present if densePdfDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          },
                          "image_metadata": {
                            "type": "array",
                            "description": "Image metadata entries for this page (present if imageMetadataDetect=true).",
                            "items": {
                              "type": "object"
                            }
                          }
                        },
                        "required": [
                          "content",
                          "height",
                          "width"
                        ]
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "start_page": {
                          "type": "integer"
                        },
                        "end_page": {
                          "type": "integer"
                        },
                        "page_limit": {
                          "type": "integer"
                        },
                        "has_more_pages": {
                          "type": "boolean"
                        },
                        "next_start_page": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "total_pages": {
                          "type": "integer"
                        },
                        "current_batch": {
                          "type": "string"
                        },
                        "remaining_pages": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "required": [
                    "success",
                    "pages"
                  ]
                },
                "example": {
                  "success": true,
                  "total_pages": 2,
                  "successful_pages": 2,
                  "failed_pages": 0,
                  "pages": [
                    {
                      "content": "ACME CORPORATION\nInvoice #INV-2024-001\n...",
                      "height": 792.0,
                      "width": 612.0,
                      "bounding_boxes": [
                        {
                          "bounding_box": {
                            "min_x": 0.612,
                            "min_y": 0.3879,
                            "max_x": 3.505,
                            "max_y": 0.922
                          },
                          "content": "LTC6102 LTC6102-1/LTC6102HV"
                        },
                        {
                          "bounding_box": {
                            "min_x": 0.6104,
                            "min_y": 1.1276,
                            "max_x": 7.8187,
                            "max_y": 1.6839
                          },
                          "content": "ELECTRICAL CHARACTERISTICS (LTC6102, LTC6102-1) The . denotes the specifications..."
                        }
                      ],
                      "barcodes": [
                        {
                          "type": "QR",
                          "value": "INV-2024-001",
                          "bounding_box": {
                            "x": 510,
                            "y": 80,
                            "w": 72,
                            "h": 72
                          }
                        }
                      ],
                      "signatures": [
                        {
                          "label": "Authorized Signature",
                          "confidence": 0.98,
                          "bounding_box": {
                            "x": 180,
                            "y": 650,
                            "w": 240,
                            "h": 80
                          }
                        }
                      ],
                      "processed_tables": [
                        {
                          "id": "tbl_1",
                          "format": "html",
                          "html": "<table>...</table>"
                        }
                      ],
                      "image_metadata": [
                        {
                          "kind": "photo",
                          "dpi": 300,
                          "mode": "gray",
                          "bounding_box": {
                            "x": 40,
                            "y": 120,
                            "w": 300,
                            "h": 180
                          }
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "start_page": 1,
                    "end_page": 1,
                    "page_limit": 100,
                    "has_more_pages": false,
                    "next_start_page": null,
                    "total_pages": 1,
                    "current_batch": "1-1",
                    "remaining_pages": 0
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid input or missing parameters)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key)"
          }
        }
      }
    },
    "/extract": {
      "post": {
        "summary": "Extract Structured Data by Schema",
        "description": "Enter your schema, get a custom output.",
        "operationId": "extractSchema",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF or image to upload (required if no fileUrl). Allowed: .pdf, .jpg, .jpeg, .png"
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the file to process (required if no file)."
                  },
                  "schema": {
                    "type": "string",
                    "description": "Required schema definition describing the fields to extract."
                  },
                  "fast": {
                    "type": "boolean",
                    "default": false,
                    "description": "Fast path that extracts directly from pages without full pipeline post-processing."
                  },
                  "customContext": {
                    "type": "string",
                    "description": "Optional additional context or instructions to guide the extraction process. Useful for providing domain-specific guidance or clarifications about the document."
                  }
                },
                "required": [
                  "schema"
                ],
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "application/pdf,image/jpeg,image/png"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful schema extraction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "oneOf": [
                        {
                          "type": "string",
                          "description": "Will return as a stringified object."
                        }
                      ],
                      "description": "Model's structured output matching the provided schema."
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "fast",
                        "slow"
                      ]
                    },
                    "pages_processed": {
                      "type": "integer",
                      "description": "Present in slow mode."
                    }
                  },
                  "required": [
                    "response"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing file/fileUrl, missing schema, or unsupported file type)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key for non-demo requests)"
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Internal Server Error (schema extraction failed)"
          }
        }
      }
    },
    "/split": {
      "post": {
        "summary": "Split Document into Sections",
        "description": "Classify docs, break apart multi-page files, auto-detect types.",
        "operationId": "partitionDocument",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF or image file to upload (required if no document_url). Allowed: .pdf, .jpg, .jpeg, .png"
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the file to process (required if no file)."
                  },
                  "queries": {
                    "type": "string",
                    "description": "Required string containing array of queries. Each query must have 'name' (section label) and 'description' (natural language hint for identifying pages)."
                  }
                },
                "required": [
                  "queries"
                ],
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "application/pdf,image/jpeg,image/png"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful document partitioning",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "pages": {
                      "type": "array",
                      "description": "Array of page objects with extracted content",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Extracted text content from the page"
                          },
                          "page_number": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "partitions": {
                      "type": "array",
                      "description": "Array of partition results with classified page ranges",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The partition name from the query"
                          },
                          "description": {
                            "type": "string",
                            "description": "The partition description from the query"
                          },
                          "pages": {
                            "type": "array",
                            "description": "Array of page numbers that match this partition (sorted)",
                            "items": {
                              "type": "integer"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "description",
                          "pages"
                        ]
                      }
                    }
                  },
                  "required": [
                    "success",
                    "pages",
                    "partitions"
                  ]
                },
                "example": {
                  "success": true,
                  "pages": [
                    {
                      "content": "ACME CORPORATION Annual Report...",
                      "page_number": 1
                    },
                    {
                      "content": "Financial Summary Table...",
                      "page_number": 2
                    }
                  ],
                  "partitions": [
                    {
                      "name": "cover_pages",
                      "description": "Title pages, cover sheets, or document headers",
                      "pages": [
                        1
                      ]
                    },
                    {
                      "name": "financial_data",
                      "description": "Pages with financial tables, revenue data, or numerical information",
                      "pages": [
                        2,
                        5,
                        6
                      ]
                    },
                    {
                      "name": "appendices",
                      "description": "Supporting documents, references, or supplementary materials",
                      "pages": [
                        7,
                        8,
                        9
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing file/document_url, invalid queries, unsupported file type, or missing queries)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key for non-demo requests)"
          },
          "500": {
            "description": "Internal Server Error (document partitioning failed)"
          }
        }
      }
    },
    "/compare": {
      "post": {
        "summary": "Compare Cardinal results against a baseline",
        "description": "Compare Cardinal results with another provider.",
        "operationId": "compareFile",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF or image file to upload (required if no fileUrl). Allowed: .pdf, .jpg, .jpeg, .png"
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the file to process (required if no file)."
                  },
                  "imageMetadata": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes image metadata in the response."
                  },
                  "signatureDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes signature detection in the response."
                  },
                  "barcodeDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes barcode detection in the response."
                  },
                  "densePdfDetect": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, includes dense tables in the response."
                  },
                  "startPage": {
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "description": "Page number to start processing from."
                  },
                  "ephemeral": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, results are not persisted; any generated assets are short-lived."
                  },
                  "markdown": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, converts tables to Markdown (may be lossy); otherwise tables stay as HTML."
                  },
                  "originalResults": {
                    "type": "string",
                    "description": "Optional Markdown string containing baseline results to compare against (e.g., another vendor's OCR output). Stored for the evals dashboard alongside Cardinal results."
                  }
                },
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful compare run. Returns standard processing fields plus a `dashboard_url` for the evals UI.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Link to the evals dashboard view for this comparison."
                    }
                  },
                  "additionalProperties": true,
                  "description": "The response is the normal /markdown payload merged with { dashboard_url }."
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid input or missing parameters)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key for non-demo requests)"
          },
          "500": {
            "description": "Internal Server Error (comparison processing failed)"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}