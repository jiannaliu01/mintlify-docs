{
  "openapi": "3.1.0",
  "info": {
    "title": "Document Processing API",
    "description": "API for processing PDF/image files into structured Markdown and extracting structured JSON using schemas.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.trycardinal.ai"
    }
  ],
  "paths": {
    "/process": {
      "post": {
        "summary": "Process File",
        "description": "Convert PDF or image pages into clean, structured Markdown, and optionally extract structured JSON using a schema.",
        "operationId": "processFile",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF or image file to upload (required if no fileUrl)"
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the file to process (required if no file)"
                  },
                  "post_processing_on": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable or disable text post-processing"
                  },
                  "start_page": {
                    "type": "integer",
                    "default": 1,
                    "description": "Page number to start processing from"
                  },
                  "ephemeral": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, results are not stored"
                  },
                  "schema": {
                    "type": "string",
                    "description": "Schema definition to guide extraction (JSON Schema or Zod string)"
                  },
                  "schema_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "zod"
                    ],
                    "description": "Format of the schema provided."
                  },
                  "boundingBoxesForParagraphs": {
                    "type": "boolean",
                    "default": true,
                    "description": "Controls granularity of returned text bounding boxes. If true (default), bounding boxes are grouped per paragraph. If false, bounding boxes are grouped per word."
                  },
                  "markdown": {
                    "type": "boolean",
                    "default": false,
                    "description": "Controls table handling in output. By default, all content is returned as Markdown, except tables which remain in HTML to preserve structure. If true, tables are also converted to Markdown using the markdownify library (may cause formatting issues)."
                  }
                },
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful document processing response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "successful_pages": {
                      "type": "integer"
                    },
                    "failed_pages": {
                      "type": "integer"
                    },
                    "pages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "description": "Extracted Markdown content"
                          },
                          "height": {
                            "type": "number"
                          },
                          "width": {
                            "type": "number"
                          },
                          "barcodes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                },
                                "bounding_box": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "number"
                                    },
                                    "y": {
                                      "type": "number"
                                    },
                                    "width": {
                                      "type": "number"
                                    },
                                    "height": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "signatures": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string"
                                },
                                "confidence": {
                                  "type": "number"
                                },
                                "bounding_box": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "number"
                                    },
                                    "y": {
                                      "type": "number"
                                    },
                                    "width": {
                                      "type": "number"
                                    },
                                    "height": {
                                      "type": "number"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "image_metadata": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "image_id": {
                                  "type": "string"
                                },
                                "format": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "object",
                                  "properties": {
                                    "width": {
                                      "type": "integer"
                                    },
                                    "height": {
                                      "type": "integer"
                                    }
                                  }
                                },
                                "position": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "integer"
                                    },
                                    "y": {
                                      "type": "integer"
                                    }
                                  }
                                },
                                "caption": {
                                  "type": "string"
                                },
                                "cropped_image_url": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "schema_result": {
                      "type": "object",
                      "description": "Optional structured schema extracted when schema and schema_format are provided",
                      "additionalProperties": true
                    }
                  }
                },
                "example": {
                  "success": true,
                  "total_pages": 2,
                  "successful_pages": 2,
                  "failed_pages": 0,
                  "pages": [
                    {
                      "content": "ACME CORPORATION\\nInvoice #INV-2024-001\\n...",
                      "height": 792.0,
                      "width": 612.0
                    }
                  ],
                  "schema_result": {
                    "invoiceNumber": "250339",
                    "dueDate": "2025-04-18"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid input or missing parameters)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key)"
          }
        }
      }
    },
    "/extract": {
      "post": {
        "summary": "Extract Structured Data by Schema",
        "description": "Extracts structured JSON from a PDF using a required schema. Accepts a file upload **or** a `fileUrl`. PDF only.",
        "operationId": "extractSchema",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file to upload (required if no fileUrl). Only .pdf allowed."
                  },
                  "fileUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Publicly accessible URL of the PDF to process (required if no file). Only .pdf allowed."
                  },
                  "schema": {
                    "type": "string",
                    "description": "Required schema definition (JSON Schema or Zod string) describing the fields to extract."
                  }
                },
                "required": [
                  "schema"
                ],
                "oneOf": [
                  {
                    "required": [
                      "file"
                    ]
                  },
                  {
                    "required": [
                      "fileUrl"
                    ]
                  }
                ]
              },
              "encoding": {
                "file": {
                  "contentType": "application/pdf"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful schema extraction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "JSON schema extracted successfully"
                    },
                    "response": {
                      "oneOf": [
                        {
                          "type": "object",
                          "additionalProperties": true
                        },
                        {
                          "type": "string",
                          "description": "May be a JSON string depending on configuration."
                        }
                      ],
                      "description": "Model's structured output matching the provided schema."
                    }
                  },
                  "required": [
                    "message",
                    "response"
                  ]
                },
                "examples": {
                  "jsonObject": {
                    "summary": "Typical object response",
                    "value": {
                      "message": "JSON schema extracted successfully",
                      "response": {
                        "invoiceNumber": "250339",
                        "invoiceDate": "2025-04-08",
                        "dueDate": "2025-04-18",
                        "totalDue": 1234.56
                      }
                    }
                  },
                  "jsonString": {
                    "summary": "Stringified JSON response",
                    "value": {
                      "message": "JSON schema extracted successfully",
                      "response": "{\"invoiceNumber\":\"250339\",\"invoiceDate\":\"2025-04-08\",\"dueDate\":\"2025-04-18\",\"totalDue\":1234.56}"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (missing file/fileUrl, missing schema, or unsupported file type)"
          },
          "401": {
            "description": "Unauthorized (invalid or missing API key for non-demo requests)"
          },
          "415": {
            "description": "Unsupported Media Type (only application/pdf accepted for /extract)"
          },
          "500": {
            "description": "Internal Server Error (schema extraction failed)"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}